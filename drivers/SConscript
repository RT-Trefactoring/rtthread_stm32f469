Import('RTT_ROOT')
Import('rtconfig')
from building import * 
import os
# get current dir path
cwd = GetCurrentDir()

# init src and inc vars
src = []
inc = []

# add dwin basic include
inc = inc + [cwd]
inc = inc + [os.path.join(cwd, 'audio_in'), os.path.join(cwd, 'audio_in/Inc')]
libpath = []
libs = []
# add dwin basic code
src += ['board.c']
src += ['stm32f4xx_it.c']
src += ['drv_usart.c']
src += ['drv_romfs.c']

if GetDepend(['BSP_USING_AUDIO_IN']):
    src += ['audio_in/drv_audio_in.c']
    libpath = [os.path.join(cwd, 'audio_in/Lib')]
    if rtconfig.PLATFORM == 'gcc':
        libs = ['PDMFilter_CM4_GCC_wc32']
    elif rtconfig.PLATFORM == 'armcc':
        libs = ['libPDMFilter_CM4_Keil_wc16']
    elif rtconfig.PLATFORM == 'iar':
        libs = ['PDMFilter_CM4_IAR_wc16', 'PDMFilter_CM4_IAR_wc32']

if GetDepend(['RT_USING_PIN']):
    src += ['drv_gpio.c']

if GetDepend(['BSP_USING_I2C2']):
	src += ['drv_i2c.c']

if GetDepend(['RT_USING_SPI']):
    src += ['drv_spi.c']

if GetDepend(['BSP_USING_SDRAM']):
    src += ['drv_sdram.c']

if GetDepend(['BSP_USING_SDCARD_BLOCK']):
    src += ['drv_sdcard.c']

if GetDepend(['BSP_USING_SDCARD_SDIO_BUS']):
    src += ['drv_sdio_adapter.c']

if GetDepend(['BSP_USING_LCD']):
    src += ['drv_lcd.c']

if GetDepend(['BSP_USING_AUDIO']):
    src += Glob('./audio/*.c')
    inc += [cwd + "/audio"] 

if GetDepend(['BSP_USING_RAMDISK']):
    src += ['drv_ramdisk.c']

if GetDepend(['RT_USING_USB_DEVICE']):
    src += ['drv_usbd.c']

if GetDepend(['BSP_USING_QSPI_FLASH']):
    src += ['drv_qspi.c', 'stm32469i_discovery_qspi.c']

group = DefineGroup('Drivers', src, LIBS = libs, LIBPATH = libpath, depend = [''], CPPPATH = inc)

Return('group')